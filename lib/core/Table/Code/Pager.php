<?php
// (c) Copyright 2002-2013 by authors of the Tiki Wiki CMS Groupware Project
//
// All Rights Reserved. See copyright.txt for details and a complete list of authors.
// Licensed under the GNU LESSER GENERAL PUBLIC LICENSE. See license.txt for details.
// $Id$

//this script may only be included - so its better to die if called directly.
if (strpos($_SERVER['SCRIPT_NAME'], basename(__FILE__)) !== false) {
	header('location: index.php');
	exit;
}

/**
 * Class Table_Code_Pager
 *
 * Creates code for the pager section of the Tablesorter code, including the code for ajax
 *
 * @package Tiki
 * @subpackage Table
 * @uses Table_Code_Manager
 */
class Table_Code_Pager extends Table_Code_Manager
{

	public function setCode()
	{
		global $prefs;
		$p = array();
		//add pager controls
		if (parent::$pager) {
			$p[] = 'size: ' . parent::$s['pager']['max'];
			$p[] = 'output: \'{startRow} to {endRow} ({totalRows})\'';
			$p[] = 'container: $(\'div#' . parent::$s['pager']['controls']['id'] . '\')';
		}

		//ajax settings
		if (parent::$ajax) {
			$p[] = 'ajaxObject: {dataType: \'html\'}';
			$p[] = 'ajaxUrl : \'' . parent::$s['ajax']['url'] . '\'';

			//ajax processing - this part grabs the html, usually from the smarty template file
			$ap = array(
				'var parsed = $.parseHTML( data );',
				'var parsedtable = $(parsed).find(\'' . parent::$tid . ' tbody\');',
				'var data = $(parsedtable).html();',
				'$(table).find(\'tbody\').html( data );',
				'var total = \'' . parent::$s['total'] . '\';',
				'return [ total ];'
			);
			$p[] = $this->iterate(
				$ap,
				'ajaxProcessing: function(data, table){',
				$this->nt2 . '}',
				$this->nt3,
				'',
				''
			);

			//customAjaxUrl: takes the url parameters generated by Tablesorter and converts to parameters that can
			//be used by Tiki
			if (!isset(parent::$s['ajax']['custom']) || parent::$s['ajax']['custom'] !== false) {
				$ca = array(
					'var vars = {}, hashes, hash, sort, sorts, filters, params = [], dir, newurl, offset = true,',
					//parse out url parameters
					'hashes = url.slice(url.indexOf(\'?\') + 1).split(\'&\');',
					'for(var i = 0; i < hashes.length; i++) {',
					'	hash = hashes[i].split(\'=\');',
					'	vars[hash[0]] = hash[1];',
					'}',
					//map of columns keys to sort and filter server side parameters
					'sort = ' . json_encode(parent::$s['ajax']['sort']) . ';',
					'filters = ' . json_encode(parent::$s['ajax']['filters']) . ';',
					'$.each(vars, function(key, value) {',
						//handle sort parameters
					'	if (sort && key in sort) {',
					'		if (value == 0){',
					'			dir = \'_asc\';',
					'		} else {',
					'			dir = \'_desc\';',
					'		}',
							//if sorts is not yet defined
					'		if (typeof sorts === \'undefined\') {',
					'			sorts = sort[key] + dir;',
							//allows for multiple comma-separated sort parameters
					'		} else {',
					'			sorts += \',\' + sort[key] + dir;',
					'		}',
					'	}',
						//handle filter parameters
					'	if (key in filters) {',
					'		if (filters[key][value]){',
					'			params.push(filters[key][value]);',
					'		} else {',
					'			params.push(filters[key] + \'=\' + value);',
					'		}',
					'offset = false;',
					'	}',
					'});',
					//convert to tiki sort param sort_mode
					'if (sorts) {',
					'	params.push(\'sort_mode=\' + sorts);',
					'}',
					//build url, starting with no parameters
					'newurl = url.slice(0,url.indexOf(\'?\'));',
					'if (offset == false) {',
					'	offset = \'\';',
					'} else {',
					'	offset = \'&' . parent::$s['ajax']['offset'] . '=\' + (this.page * this.size);',
					'}',
					'newurl = newurl + \'?numrows=\' + this.size + offset + \'&tsAjax=true\';',
					'$.each(params, function(key, value) {',
					'	newurl = newurl + \'&\' + value;',
					'});',
					//add external filter param if selected
					'if (typeof $(\'' . parent::$tid . '\').data(\'ts_extval\') !== \'undefined\') {',
					'	newurl = newurl + \'&\' + $(\'' . parent::$tid . '\').data(\'ts_extval\');',
					'}',
					'return newurl;'
				);
			} else {
				$ca = array(
					'return url + \'&tsAjax=true&' . parent::$s['ajax']['offset'] . '=\' + (this.page * this.size);'
				);
			}
			if (count($ca) > 0) {
				$p[] = $this->iterate(
					$ca,
					'customAjaxUrl: function(table, url) {',
					$this->nt2 . '}',
					$this->nt3,
					'',
					''
				);
			}
		}
		if (count($p) > 0) {
			$code = $this->iterate($p, '.tablesorterPager({', $this->nt . '});', $this->nt2, '');
			parent::$code[self::$level1] = $code;
		}
	}
}
