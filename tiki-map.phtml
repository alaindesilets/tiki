<?php
require_once('tiki-setup.php');

if (!function_exists('ms_newMapObj')) {
	$smarty->assign('msg',tra("You must first setup MapServer"));
	$smarty->display("error.tpl");
	die;
}

if(@$feature_maps != 'y') {
  $smarty->assign('msg',tra("Feature disabled"));
  $smarty->display("error.tpl");
  die;
}

if($tiki_p_map_view != 'y') {
  $smarty->assign('msg',tra("You do not have permissions to view the maps"));
  $smarty->display("error.tpl");
  die;
}

$smarty->assign('tiki_p_map_edit',$tiki_p_map_edit);

if (isset($_REQUEST['mapfile']))
{
  // Validate to prevent displaying any file
  if (strstr($_REQUEST["mapfile"], '..')) {
    $smarty->assign('msg', tra("You dont have permission to do that"));
    $smarty->display('error.tpl');
    die;
  }
  $mapfile = $_REQUEST['mapfile'];
} else
{
  $mapfile = $default_map;
}

//checking the mapfile
if (!is_file($map_path.$mapfile) || preg_match("/(\/\.)/", $map_path.$mapfile))
{
  $smarty->assign('msg',tra("invalid mapfile name"));
  $smarty->display("error.tpl");
  die;
}

// user defined error handling function to handle errors in loading mapfile
function userErrorHandler ($errno, $errmsg, $filename, $linenum, $vars)
{
  global $smarty;
  global $style_base;
  global $map_path;
  global $mapfile;
  global $tiki_p_map_edit;
  $msg=tra("An error as occured with the mapfile: ").$mapfile."<br /><br />".$errmsg."<br />";
  
  $pos=strpos($errmsg,":(");
  if ($errmsg[$pos+2]=='l')
  {
    $line=substr($errmsg,$pos+6);
  } else {
    $line=substr($errmsg,$pos+2);
  }
  $pos=strpos($line,")");
  $line=substr($line,0,$pos);
  
  if ($errmsg[$pos+2]!='l') $line++;
  
  $fcontents = file($map_path.$mapfile);

  $msg .="<pre>";
  
  if ($line>=4) {
    $msg.="   ".$fcontents[$line-4];
    $msg.="   ".$fcontents[$line-3];
    $msg.="   ".$fcontents[$line-2];
  }
  $msg.="-->".$fcontents[$line-1];
  if ($line+3<count($fcontents)) {
    $msg.="   ".$fcontents[$line+0];
    $msg.="   ".$fcontents[$line+1];
    $msg.="   ".$fcontents[$line+2];
    $msg.="   ".$fcontents[$line+3];
  }
  $msg.="<pre/><br />";
  
  if ($tiki_p_map_edit == 'y')
  {
     $msg.='<a class="link" href="tiki-map_edit.php?mapfile='.$mapfile.'&mode=editing">';
     $msg.='<img src="img/icons/config.gif" border="0"  alt="'.tra("edit").'" title="'.tra("edit").'" />';
     $msg.='</a>';
  }
  
  $smarty->assign('msg',$msg);
  $smarty->display("error.tpl");
  die;
}

$old_error_handler = set_error_handler("userErrorHandler");

$map = ms_newMapObj($map_path.$mapfile);

restore_error_handler();

$smarty->assign("page",$map->name." Map");
 
$layerbol=FALSE;

if (isset($_REQUEST['Redraw'])) {
	$_REQUEST['x'] = floor($map->width / 2);
	$_REQUEST['y'] = floor($map->height / 2);
	
}

if (isset($_REQUEST['size'])&&(is_numeric($_REQUEST['size']))&& ($_REQUEST['size']>0) &&($_REQUEST['size']<2000)){//check a non negative numeric less than 2000 
       $xsize=floor($_REQUEST['size']);
       $ysize=floor(($_REQUEST['size']*$map->height/$map->width));
       $layerbol=TRUE;
 	 $size = $_REQUEST['size'];
} 
else {
	$xsize = $map->width;
	$ysize = $map->height;
	$size = $map->width;
}
$map->Set("width",$xsize);
$map->Set("height",$ysize);
$map->scalebar->Set("width",$xsize);

if (isset($_REQUEST['minx']) && isset($_REQUEST['miny'])
     && isset($_REQUEST['maxx']) && isset($_REQUEST['maxy']))
{
  $my_extent = ms_newrectObj();
  $my_extent->setextent($_REQUEST['minx'],$_REQUEST['miny'],$_REQUEST['maxx'],$_REQUEST['maxy']);
} else
{
  $my_extent = ms_newrectObj();
  $my_extent->setextent($map->extent->minx,$map->extent->miny,$map->extent->maxx,$map->extent->maxy);
}

$query=FALSE;
$map_querymsg='<table class="normal">';
if (isset($_REQUEST['zoom']))
{
  $zoom=$_REQUEST['zoom'];
  $my_point = ms_newpointObj();
  if (isset($_REQUEST['x']) && isset($_REQUEST['y']) && $zoom!=0)
  {
    $my_point->setXY(floor($_REQUEST['x']*$size/$_REQUEST['oldsize']),floor($_REQUEST['y']*$size/$_REQUEST['oldsize']));
  } else
  {
    $my_point->setXY(($map->height)/2,($map->width)/2);
  }
  if ($zoom==0)  // It is a query
  {
    $map->zoompoint(1,$my_point,$map->width,$map->height,$my_extent);
    if (isset($_REQUEST['x']) && isset($_REQUEST['y']))
    {
      //get the real world coordinates
      $x=$_REQUEST['x'];
      $y=$_REQUEST['y'];
      $width=$map->width-1;
      $height=$map->height-1;
      $minx=$map->extent->minx;
      $maxx=$map->extent->maxx;
      $miny=$map->extent->miny;
      $maxy=$map->extent->maxy;
      $dx=$maxx-$minx;
      $dy=$maxy-$miny;
      $factorx=$dx/$width;
      $factory=$dy/$height;
      $corx=$x*$factorx+$minx;
      $cory=$maxy-$y*$factory;
      $query_point= ms_newpointObj();
      $query_point->setXY($corx,$cory);
      $map_querymsg.='<tr><td class="heading" colspan="2">'.tra('Query point:').' <b>'.$corx.' / '.$cory.'</b></td><tr>';
      $query=TRUE;
    }    
  } else
  {
    $map->zoompoint($zoom,$my_point,$map->width,$map->height,$my_extent);
  }
} else
{
  $zoom=1;
}


//define which layer is visible
for ($j=0;$j<$map->numlayers;$j++)
{
  $my_layer=$map->getLayer($j);

  if (isset($_REQUEST[str_replace(" ","_",$my_layer->name)]))
  {
    if ($_REQUEST[str_replace(" ","_",$my_layer->name)]==1)
    {
      $my_layer->Set("status",MS_ON);
    }
  } else
  {
    // test to see if we are not on the first drawing
    if ($layerbol)
    {
    	$my_layer->Set("status",MS_OFF);
    }
  }

  //Display labels
  if ($my_layer->labelitem!="")
  {
  		$layer_label[$j]="On";
  		if (isset($_REQUEST[str_replace(" ","_",$my_layer->name)."_label"]))
    {
  		  $my_layers_label_checked[$j]="checked";
  		} else
  		{
  		  $my_layers_label_checked[$j]="";
  		  $my_layer->Set("labelmaxscale",0);
  		}
  } else
  {
    $layer_label[$j]="Off";
  }
  
  if ($my_layer->tolerance!="")
  {
    $layer_query[$j]="On";
  } else {
    $layer_query[$j]="Off";
  }
  
  if ($query) // We have a query
  {
    if (@$my_layer->queryByPoint($query_point,MS_MULTIPLE,0)==MS_SUCCESS)
    {
      $my_layer->open();
      $map_querymsg.='<tr><td class="heading" colspan="2">'.tra('layer:').' <b>'.$my_layer->name.'</b></td></tr>';
      for($k=0;$k<$my_layer->getNumResults();$k++)
      {       
        $my_resultcache=$my_layer->getResult($k);
        $my_shape=$my_layer->getShape($my_resultcache->tileindex,$my_resultcache->shapeindex);
        $my_array=$my_shape->values;
        $map_querymsg.='<tr><td class="heading" colspan="2"><small>'.tra('Record:').' '.$my_resultcache->shapeindex.'</small></td></tr>';
        $col=0;
        foreach ($my_array as $key => $value)
        {
          if ($col %2) {
            $map_querymsg.='<tr><td class="even"><small>'.$key.'</small></td><td class="even"><small>'.$value.'</small></td></tr>';
          } else {
            $map_querymsg.='<tr><td class="odd"><small>'.$key.'</small></td><td class="odd"><small>'.$value.'</small></td></tr>';
          }
          $col++;            
        }
      }
      $my_layer->close();
    }   
  }
}  
$map_querymsg.="</table>";

$smarty->assign('map_querymsg',$map_querymsg);

$image = $map->drawquery();
$image_url = $image->saveWebImage();
//the user wants an image only
if (isset($_REQUEST['maponly']))
{
  header("Content-type: image/png");
  $image_file=str_replace($image->imageurl,$image->imagepath,$image_url);
  readfile($image_file);
  die;
} 

$image_ref = $map->drawReferenceMap();
$image_ref_url = $image_ref->saveWebImage();
$image_leg = $map->drawLegend();
$image_leg_url = $image_leg->saveWebImage();
$image_scale = $map->drawScaleBar();
$image_scale_url = $image_scale->saveWebImage();

$minx=$map->extent->minx;
$miny=$map->extent->miny;
$maxx=$map->extent->maxx;
$maxy=$map->extent->maxy;

$smarty->assign('mapfile',$mapfile);

$smarty->assign('image_url',$image_url);
$smarty->assign('image_ref_url',$image_ref_url);
$smarty->assign('image_leg_url',$image_leg_url);
$smarty->assign('image_scale_url',$image_scale_url);
$smarty->assign('minx',$minx);
$smarty->assign('miny',$miny);
$smarty->assign('maxx',$maxx);
$smarty->assign('maxy',$maxy);

$smarty->assign('size',$size);
$smarty->assign('possiblesizes',array(200,300,400,600,800,1000));
$smarty->assign('displaysizes',array(200,300,400,600,800,1000));

$smarty->assign_by_ref('layer_label',$layer_label);
$smarty->assign_by_ref('my_layers_label_checked',$my_layers_label_checked);

$smarty->assign_by_ref('layer_query',$layer_query);

// is the user registered?
if(isset($_REQUEST['view_user'])) {
  $userwatch = $_REQUEST['view_user'];
} else {
  if($user) {
    $userwatch = $user;
  } else {
			$userwatch ="";
  }
}  

  for ($j=0;$j<$map->numlayers;$j++)
  {
    $my_layers[$j]=$map->getLayer($j);
      
    //Metadata handling
    $link=$my_layers[$j]->getMetadata("WIKI");
    if ($link!="")
    {
      if($tikilib->page_exists($link))
      {
        $layer_wiki[$j]='<a href="tiki-index.php?page='.$link.'"><small>'.$my_layers[$j]->name.'</small></a>';
      } else
      {
        $layer_wiki[$j]='<small>'.$my_layers[$j]->name.'<a href="tiki-editpage.php?page='.$link.'">?</a></small>';
      }
    } else
    {
      $layer_wiki[$j]='<small>'.$my_layers[$j]->name.'</small>';
    }
    if ($userwatch!="")
    {
      $layer_download[$j]=$my_layers[$j]->getMetadata("DOWNLOAD");
    } else
    {
    	$layer_download[$j]="";
    }
  
    //Layer display Handling
    if ($my_layers[$j]->status==MS_ON)
    {
      $my_layers_checked[$j]="checked";
      $bolcheck=1;
    } else
    {
      $my_layers_checked[$j]="";
      $bolcheck=0;
    }
  }

$smarty->assign_by_ref('my_layers',$my_layers);
$smarty->assign_by_ref('my_layers_checked',$my_layers_checked);
$smarty->assign_by_ref('layer_wiki',$layer_wiki);
$smarty->assign_by_ref('layer_download',$layer_download);
$smarty->assign('userwatch',$userwatch);

  for ($i=-4;$i<=4;$i++)
  {
     
  	  switch($i)
  	  {
  	  case "-4":
  	  case "-3":
  	  case "-2":
  	    $zoom_values[]=$i;
  	    $zoom_display[]='zoom out '.$i.'x';
		    break;
		  case "0":
		    $zoom_values[]=$i;
		    $zoom_display[]='query';
       break;
		  case "1":
		    $zoom_values[]=$i;
		    $zoom_display[]='pan';
       break;
  	  case "2":
  	  case "3":
  	  case "4":
  	    $zoom_values[]=$i;
  	    $zoom_display[]='zoom in '.$i.'x';
       break;
		  }
		}
$smarty->assign('zoom',$zoom);		
$smarty->assign_by_ref('zoom_values',$zoom_values);
$smarty->assign_by_ref('zoom_display',$zoom_display);

$smarty->assign('mid','map/tiki-map.tpl');
$smarty->display("tiki.tpl");
?>
